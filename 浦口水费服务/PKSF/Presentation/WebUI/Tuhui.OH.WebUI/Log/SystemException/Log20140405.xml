<SystemException_Logger><log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:16:17.6233200+08:00" level="FATAL" thread="6848" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:18:52.9412037+08:00" level="FATAL" thread="6272" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:22:08.9374140+08:00" level="FATAL" thread="5536" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:22:30.1146253+08:00" level="FATAL" thread="6488" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:23:24.9317606+08:00" level="FATAL" thread="5536" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:23:46.3379850+08:00" level="FATAL" thread="6604" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:23:46.6260015+08:00" level="FATAL" thread="5536" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:26:07.9320837+08:00" level="FATAL" thread="6604" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:29:24.0142990+08:00" level="FATAL" thread="120" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:29:45.2115114+08:00" level="FATAL" thread="1796" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:29:45.3335184+08:00" level="FATAL" thread="120" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:29:45.6775381+08:00" level="FATAL" thread="6604" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:29:46.1915675+08:00" level="FATAL" thread="6872" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:33:10.7902698+08:00" level="FATAL" thread="120" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:36:39.4372038+08:00" level="FATAL" thread="1796" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:37:00.5064088+08:00" level="FATAL" thread="6272" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:37:55.4395508+08:00" level="FATAL" thread="956" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:38:16.5017555+08:00" level="FATAL" thread="5476" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:38:16.9077788+08:00" level="FATAL" thread="120" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:40:26.5761954+08:00" level="FATAL" thread="6604" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:43:55.4391416+08:00" level="FATAL" thread="6272" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:44:16.5963518+08:00" level="FATAL" thread="6848" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:44:16.6933573+08:00" level="FATAL" thread="5476" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:44:17.0513778+08:00" level="FATAL" thread="1796" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:44:17.5504063+08:00" level="FATAL" thread="956" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:47:54.9408404+08:00" level="FATAL" thread="956" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:51:10.9400509+08:00" level="FATAL" thread="1796" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:51:32.0212566+08:00" level="FATAL" thread="1412" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:52:26.9393978+08:00" level="FATAL" thread="6612" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:52:48.2906190+08:00" level="FATAL" thread="6604" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:52:48.7356445+08:00" level="FATAL" thread="6272" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:55:10.4447498+08:00" level="FATAL" thread="6872" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:58:26.9459890+08:00" level="FATAL" thread="956" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:58:48.0341952+08:00" level="FATAL" thread="6612" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   �� System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   �� System.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   �� System.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   �� System.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   �� System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData)
   �� System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   �� System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:58:48.1452015+08:00" level="FATAL" thread="6352" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:58:48.4572194+08:00" level="FATAL" thread="6872" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
<log4net_event logger="SystemExceptionLogger" timestamp="2014-04-05T23:58:48.9572480+08:00" level="FATAL" thread="1796" domain="/LM/W3SVC/1/ROOT-1-130410921940212802" identity="admin" username="IIS APPPOOL\ASP.NET v4.0">
  <log4net_message>ϵͳ�쳣</log4net_message>
  <log4net_properties>
    <log4net_data name="log4net:HostName" value="tangdeng" />
  </log4net_properties>
  <log4net_exception><![CDATA[System.Data.EntityException: �����ṩ������ Open ��ʧ��? ---> System.Data.SqlClient.SqlException: ���� SQL Server ��������ʱ������������صĻ��ض���ʵ���Ĵ���?δ�ҵ����޷����ʷ�����?����֤ʵ�������Ƿ���ȷ���� SQL Server ������Ϊ����Զ������? (provider: Named Pipes Provider, error: 40 - �޷��򿪵� SQL Server ������) ---> System.ComponentModel.Win32Exception: �Ҳ�������·��?
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   �� System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   �� System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   �� System.Data.SqlClient.SqlConnection.Open()
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   --- �ڲ��쳣��ջ���ٵĽ�β ---
   �� System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(Boolean openCondition, DbConnection storeConnectionToOpen, DbConnection originalConnection, String exceptionCode, String attemptedOperation, Boolean& closeStoreConnectionOnFailure)
   �� System.Data.EntityClient.EntityConnection.Open()
   �� System.Data.Objects.ObjectContext.EnsureConnection()
   �� System.Data.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   �� System.Data.Objects.ObjectQuery`1.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
   �� System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   �� System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   �� Tuhui.OH.DataAccess.ZENTRACK_TICKETSDataAccess.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.DataAccess\ZENTRACK_TICKETSDataAccess.cs:�к� 69
   �� Tuhui.OH.BusinessLogic.ZENTRACK_TICKETSBusinessLogic.GetAlarmList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Service\Tuhui.OH.BusinessLogic\ZENTRACK_TICKETSBusinessLogic.cs:�к� 27
   �� Tuhui.OH.WebUI.Controllers.APIEventController.FindEventList(Nullable`1 priority) λ�� e:\SVN\ͼ��\Project\04 ��Ŀ�ĵ�\13 ��»�3D����չʾϵͳ\07.Source\PC\Tuhui.QAZSXT3D\Presentation\WebUI\Tuhui.OH.WebUI\Controllers\APIEventController.cs:�к� 28
   �� lambda_method(Closure , ControllerBase , Object[] )
   �� System.Web.Mvc.ReflectedActionDescriptor.Execute(ControllerContext controllerContext, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(ControllerContext controllerContext, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.<>c__DisplayClass15.<InvokeActionMethodWithFilters>b__12()
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodFilter(IActionFilter filter, ActionExecutingContext preContext, Func`1 continuation)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(ControllerContext controllerContext, IList`1 filters, ActionDescriptor actionDescriptor, IDictionary`2 parameters)
   �� System.Web.Mvc.ControllerActionInvoker.InvokeAction(ControllerContext controllerContext, String actionName)]]></log4net_exception>
</log4net_event>
</SystemException_Logger>